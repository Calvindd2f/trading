function Get-PyPyVersion {
    [CmdletBinding()]
    param()

    $pypyVersion = [System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture

    if ($pypyVersion -eq "x64") {
        return "64"
    }

    return "32"
}

function Install-PyPy {
    [CmdletBinding(SupportsShouldProcess = $true)]
    param(
        [Parameter(Mandatory = $false)]
        [int]$retryCount = 5
    )

    <#
    .SYNOPSIS
        Downloads and installs PyPy based on the system architecture and Python version.

    .DESCRIPTION
        Downloads and installs PyPy based on the system architecture and Python version.

        This function takes one parameter, retryCount, which specifies the number of times to retry the download and installation of PyPy if there is a timeout.

    .PARAMETER retryCount
        The number of times to retry the download and installation of PyPy if there is a timeout.

        Default value is 5.

    .NOTES
        This function requires the following permissions:
            - Write access to the "C:\temp" directory.
            - Execute access to the "wget" command.
            - Execute access to the "unzip" command.
    #>

    if ($retryCount -lt 0) {
        Write-Warning "Retry count cannot be less than zero."
        return
    }

    $pypyVersion = Get-PyPyVersion
    $url = "https://downloads.python.org/pypy/pypy3.10-v7.3.16-win$pypyVersion.zip"

    $webClient = New-Object System.Net.WebClient
    $webClient.Headers.Add("User-Agent", "Mozilla/5.0 (Windows NT; Windows NT 10.0; en-AU) WindowsPowerShell/5.1.19041.1682")

    $tempPath = Join-Path -Path $env:TEMP -ChildPath "pypy.zip"

    try {
        Write-Host "Downloading PyPy $url"
        $webClient.DownloadFileAsync($url, $tempPath)
        $webClient.DownloadFileCompleted += {
            $global:success = $true
        }
        $webClient.DownloadFileTaskAsync($url, $tempPath).Wait()
    }
    catch {
        if ($_.Exception.Message -like "*timed out*" -or $_.Exception.Message -like "*Unable to connect to the remote server*") {
            Write-Warning "TIMEOUT: Will retry in 10 seconds."
            if ($global:count -gt $retryCount) {
                throw "Timeout retry limit reached"
            }
            $global:count++
            Start-Sleep -Seconds 10
            Install-PyPy -retryCount $retryCount
            return
        }
        else {
            Write-Warning "Failed to execute Exchange command: $commandFriendly"
            Write-Warning $_.Exception.Message
            throw
        }
    }

    try {
        Write-Host "Unpackaging PyPy"
        Expand-Archive -Force -Path $tempPath -DestinationPath $env:TEMP
    }
    catch {
        Write-Warning "Failed to expand archive: $($_.Exception.Message)"
        return
    }

    try {
        Write-Host "Adding PyPy to PATH"
        $env:PATH += ";$($env:TEMP)\pypy"
    }
    catch {
        Write-Warning "Failed to add PyPy to PATH: $($_.Exception.Message)"
        return
    }

    Write-Host "PyPy installed successfully."
}

function Verify {
    return $true
}

$global:count = 0

if ((Verify) -and ($global:success) ) {
    Install-PyPy
}
